import React from 'react'
import { Container, Row, Col, Card, Badge } from 'react-bootstrap'
import { Bell, ExclamationTriangle, InfoCircle, XCircle, CheckCircle } from 'react-bootstrap-icons'
import { useAuth } from '../hooks/useAuth.jsx'
import './NotificationsScreen.css'

export const NotificationsScreen = () => {
    const { user } = useAuth()

    // –ú–æ–∫–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const notifications = [
        {
            id: 1,
            title: '–ö–µ—Å—Ç–µ ”©–∑–≥–µ—Ä–¥—ñ',
            message: '–ï—Ä—Ç–µ“£ —Å–∞–±–∞“õ—Ç–∞—Ä—ã“£—ã–∑ 301 –∞—É–¥–∏—Ç–æ—Ä–∏—è“ì–∞ –∫”©—à—ñ—Ä—ñ–ª–¥—ñ',
            type: 'warning',
            time: '10 –º–∏–Ω—É—Ç –±“±—Ä—ã–Ω',
            read: false
        },
        {
            id: 2,
            title: '–ñ–∞“£–∞ —Ç–∞–ø—Å—ã—Ä–º–∞',
            message: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ø”ô–Ω—ñ–Ω–µ–Ω –∂–∞“£–∞ “Ø–π –∂“±–º—ã—Å—ã –±–µ—Ä—ñ–ª–¥—ñ',
            type: 'info',
            time: '1 —Å–∞“ì–∞—Ç –±“±—Ä—ã–Ω',
            read: false
        },
        {
            id: 3,
            title: '–ï–º—Ç–∏—Ö–∞–Ω –∂–∞—Ä–∏—è–ª–∞–Ω',
            message: '–ü—Ä–æ–≥—Ä–∞–º–º–∞–ª–∞—É –ø”ô–Ω—ñ –±–æ–π—ã–Ω—à–∞ –µ–º—Ç–∏—Ö–∞–Ω –∫“Ø–Ω—ñ –±–µ–ª–≥—ñ–ª–µ–Ω–¥—ñ - 25 “õ–∞—Ä–∞—à–∞',
            type: 'danger',
            time: '2 —Å–∞“ì–∞—Ç –±“±—Ä—ã–Ω',
            read: true
        },
        {
            id: 4,
            title: '–°”ô—Ç—Ç—ñ–ª—ñ–∫!',
            message: '”®—Ç–∫–µ–Ω –∞–ø—Ç–∞–¥–∞“ì—ã –±–∞—Ä–ª—ã“õ —Å–∞–±–∞“õ—Ç–∞—Ä“ì–∞ “õ–∞—Ç—ã—Å“õ–∞–Ω—ã“£—ã–∑ “Ø—à—ñ–Ω —Ä–∞—Ö–º–µ—Ç!',
            type: 'success',
            time: '1 –∫“Ø–Ω –±“±—Ä—ã–Ω',
            read: true
        }
    ]

    const getTypeColor = (type) => {
        const colors = {
            warning: 'warning',
            info: 'info',
            danger: 'danger',
            success: 'success'
        }
        return colors[type] || 'secondary'
    }

    const getTypeIcon = (type) => {
        const icons = {
            warning: ExclamationTriangle,
            info: InfoCircle,
            danger: XCircle,
            success: CheckCircle
        }
        return icons[type] || Bell
    }

    return (
        <div className="notifications-screen">
            <Container className="py-4">
                <div className="notifications-header mb-4">
                    <h2 className="fw-bold">
                        <Bell size={32} className="me-2 text-primary" />
                        –•–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É–ª–∞—Ä
                    </h2>
                    <p className="text-muted">–ë–∞—Ä–ª—ã“õ –∂–∞“£–∞–ª—ã“õ—Ç–∞—Ä –º–µ–Ω ”©–∑–≥–µ—Ä—ñ—Å—Ç–µ—Ä</p>
                </div>

                <Row>
                    <Col lg={8} className="mx-auto">
                        {notifications.map((notification) => {
                            const IconComponent = getTypeIcon(notification.type)
                            return (
                                <Card 
                                    key={notification.id} 
                                    className={`notification-card mb-3 ${!notification.read ? 'unread' : ''}`}
                                >
                                    <Card.Body>
                                        <div className="d-flex align-items-start">
                                            <div className="notification-icon me-3">
                                                <IconComponent size={24} />
                                            </div>
                                        <div className="flex-grow-1">
                                            <div className="d-flex justify-content-between align-items-start mb-2">
                                                <h5 className="mb-0">{notification.title}</h5>
                                                {!notification.read && (
                                                    <Badge bg="primary" pill>–ñ–∞“£–∞</Badge>
                                                )}
                                            </div>
                                            <p className="text-muted mb-2">{notification.message}</p>
                                            <small className="text-secondary">
                                                <Badge bg={getTypeColor(notification.type)} className="me-2">
                                                    {notification.type === 'warning' && '–ï—Å–∫–µ—Ä—Ç—É'}
                                                    {notification.type === 'info' && '–ê“õ–ø–∞—Ä–∞—Ç'}
                                                    {notification.type === 'danger' && '–ú–∞“£—ã–∑–¥—ã'}
                                                    {notification.type === 'success' && '–°”ô—Ç—Ç—ñ–ª—ñ–∫'}
                                                </Badge>
                                                {notification.time}
                                            </small>
                                        </div>
                                    </div>
                                </Card.Body>
                            </Card>
                            )
                        })}

                        {notifications.length === 0 && (
                            <Card className="text-center py-5">
                                <Card.Body>
                                    <div className="empty-state">
                                        <h3 className="mb-3">üì≠</h3>
                                        <h5>–•–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É–ª–∞—Ä –∂–æ“õ</h5>
                                        <p className="text-muted">–ë–∞—Ä–ª—ã“õ —Ö–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É–ª–∞—Ä—ã“£—ã–∑ –æ—Å—ã–Ω–¥–∞ –∫”©—Ä—Å–µ—Ç—ñ–ª–µ–¥—ñ</p>
                                    </div>
                                </Card.Body>
                            </Card>
                        )}
                    </Col>
                </Row>
            </Container>
        </div>
    )
}